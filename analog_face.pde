#include <avr/pgmspace.h>

PROGMEM uint8_t markers_x_point_1[]={66, 61, 56, 54, 54, 57, 62, 67, 72, 74, 74, 71};
PROGMEM uint8_t markers_x_point_2[]={62, 57, 54, 54, 56, 61, 66, 71, 74, 74, 72, 67};
PROGMEM uint8_t markers_x_point_3[]={62, 100, 128, 128, 128, 103, 66, 28, 0, 0, 0, 25};
PROGMEM uint8_t markers_x_point_4[]={66, 104, 128, 128, 128, 99, 62, 24, 0, 0, 0, 29};
PROGMEM uint8_t markers_y_point_1[]={74, 74, 71, 66, 61, 56, 54, 54, 57, 62, 67, 72};
PROGMEM uint8_t markers_y_point_2[]={74, 72, 67, 62, 57, 54, 54, 56, 61, 66, 71, 74};
PROGMEM uint8_t markers_y_point_3[]={0, 0, 25, 62, 100, 128, 128, 128, 103, 66, 28, 0};
PROGMEM uint8_t markers_y_point_4[]={0, 0, 29, 66, 104, 128, 128, 128, 99, 62, 24, 0};

PROGMEM uint8_t hour_x_point_1[]={67, 66, 65, 64, 63, 62, 60, 59, 59, 58, 56, 56, 55, 55, 54, 54, 54, 53, 53, 54, 53, 54, 55, 55, 56, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 69, 70, 72, 72, 73, 73, 74, 74, 74, 75, 75, 74, 75, 74, 73, 73, 72, 72, 71, 70, 69, 68};
PROGMEM uint8_t hour_x_point_2[]={61, 60, 59, 58, 57, 56, 56, 55, 55, 54, 54, 54, 53, 53, 54, 54, 54, 55, 55, 56, 57, 58, 59, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 72, 73, 73, 74, 74, 74, 75, 75, 74, 74, 74, 73, 73, 72, 71, 70, 69, 69, 68, 66, 65, 64, 63, 62};
PROGMEM uint8_t hour_x_point_3[]={61, 65, 69, 73, 77, 81, 86, 89, 92, 94, 98, 100, 101, 102, 104, 104, 104, 104, 103, 102, 101, 98, 96, 93, 90, 87, 83, 79, 75, 71, 67, 63, 59, 55, 51, 47, 42, 39, 36, 34, 30, 28, 27, 26, 24, 24, 24, 24, 25, 26, 27, 30, 32, 35, 38, 41, 45, 49, 53, 57};
PROGMEM uint8_t hour_x_point_4[]={67, 71, 75, 79, 83, 87, 90, 93, 96, 98, 100, 102, 103, 104, 104, 104, 104, 102, 101, 100, 97, 94, 92, 89, 86, 81, 77, 73, 69, 65, 61, 57, 53, 49, 45, 41, 38, 35, 32, 30, 28, 26, 25, 24, 24, 24, 24, 26, 27, 28, 31, 34, 36, 39, 42, 47, 51, 55, 59, 63};
PROGMEM uint8_t hour_y_point_1[]={74, 74, 75, 75, 74, 75, 74, 73, 73, 72, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 60, 59, 59, 58, 56, 56, 55, 55, 54, 54, 54, 53, 53, 54, 53, 54, 55, 55, 56, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 69, 70, 72, 72, 73, 73, 74};
PROGMEM uint8_t hour_y_point_2[]={74, 74, 73, 73, 72, 71, 70, 69, 69, 68, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 56, 55, 55, 54, 54, 54, 53, 53, 54, 54, 54, 55, 55, 56, 57, 58, 59, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 72, 73, 73, 74, 74, 74, 75, 75, 74};
PROGMEM uint8_t hour_y_point_3[]={24, 24, 24, 25, 26, 27, 30, 32, 35, 38, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 86, 89, 92, 94, 98, 100, 101, 102, 104, 104, 104, 104, 103, 102, 101, 98, 96, 93, 90, 87, 83, 79, 75, 71, 67, 63, 59, 55, 51, 47, 42, 39, 36, 34, 30, 28, 27, 26, 24};
PROGMEM uint8_t hour_y_point_4[]={24, 24, 26, 27, 28, 31, 34, 36, 39, 42, 47, 51, 55, 59, 63, 67, 71, 75, 79, 83, 87, 90, 93, 96, 98, 100, 102, 103, 104, 104, 104, 104, 102, 101, 100, 97, 94, 92, 89, 86, 81, 77, 73, 69, 65, 61, 57, 53, 49, 45, 41, 38, 35, 32, 30, 28, 26, 25, 24, 24};
PROGMEM uint8_t x_point_1[]={66, 65, 65, 64, 64, 63, 63, 62, 62, 61, 61, 61, 60, 60, 58, 58, 58, 57, 57, 57, 56, 56, 56, 56, 55, 55, 54, 54, 54, 54, 54, 54, 54, 54, 54, 53, 53, 54, 54, 54, 54, 55, 55, 55, 56, 56, 56, 56, 56, 57, 57, 57, 58, 58, 59, 59, 60, 60, 61, 61, 62, 63, 63, 64, 64, 65, 65, 66, 66, 67, 67, 67, 68, 68, 70, 70, 70, 71, 71, 71, 72, 72, 72, 72, 73, 73, 74, 74, 74, 74, 74, 74, 74, 74, 74, 75, 75, 74, 74, 74, 74, 73, 73, 73, 72, 72, 72, 72, 72, 71, 71, 71, 70, 70, 69, 69, 68, 68, 67, 67};
PROGMEM uint8_t x_point_2[]={62, 61, 61, 60, 60, 59, 59, 58, 58, 57, 57, 57, 56, 56, 56, 56, 56, 55, 55, 55, 54, 54, 54, 54, 53, 53, 54, 54, 54, 54, 54, 54, 54, 54, 54, 55, 55, 56, 56, 56, 56, 57, 57, 57, 58, 58, 58, 60, 60, 61, 61, 61, 62, 62, 63, 63, 64, 64, 65, 65, 66, 67, 67, 68, 68, 69, 69, 70, 70, 71, 71, 71, 72, 72, 72, 72, 72, 73, 73, 73, 74, 74, 74, 74, 75, 75, 74, 74, 74, 74, 74, 74, 74, 74, 74, 73, 73, 72, 72, 72, 72, 71, 71, 71, 70, 70, 70, 68, 68, 67, 67, 67, 66, 66, 65, 65, 64, 64, 63, 63};
PROGMEM uint8_t x_point_3[]={62, 65, 68, 71, 74, 77, 80, 83, 86, 88, 91, 94, 96, 99, 102, 104, 106, 108, 110, 112, 113, 115, 116, 117, 118, 119, 121, 121, 122, 122, 122, 122, 122, 121, 121, 121, 120, 119, 118, 117, 115, 114, 112, 110, 108, 106, 104, 103, 100, 98, 95, 92, 90, 87, 84, 81, 78, 75, 72, 69, 66, 63, 60, 57, 54, 51, 48, 45, 42, 40, 37, 34, 32, 29, 26, 24, 22, 20, 18, 16, 15, 13, 12, 11, 10, 9, 7, 7, 6, 6, 6, 6, 6, 7, 7, 7, 8, 9, 10, 11, 13, 14, 16, 18, 20, 22, 24, 25, 28, 30, 33, 36, 38, 41, 44, 47, 50, 53, 56, 59};
PROGMEM uint8_t x_point_4[]={66, 69, 72, 75, 78, 81, 84, 87, 90, 92, 95, 98, 100, 103, 104, 106, 108, 110, 112, 114, 115, 117, 118, 119, 120, 121, 121, 121, 122, 122, 122, 122, 122, 121, 121, 119, 118, 117, 116, 115, 113, 112, 110, 108, 106, 104, 102, 99, 96, 94, 91, 88, 86, 83, 80, 77, 74, 71, 68, 65, 62, 59, 56, 53, 50, 47, 44, 41, 38, 36, 33, 30, 28, 25, 24, 22, 20, 18, 16, 14, 13, 11, 10, 9, 8, 7, 7, 7, 6, 6, 6, 6, 6, 7, 7, 9, 10, 11, 12, 13, 15, 16, 18, 20, 22, 24, 26, 29, 32, 34, 37, 40, 42, 45, 48, 51, 54, 57, 60, 63};
PROGMEM uint8_t y_point_1[]={74, 74, 74, 74, 74, 75, 75, 74, 74, 74, 74, 73, 73, 73, 72, 72, 72, 72, 72, 71, 71, 71, 70, 70, 69, 69, 68, 68, 67, 67, 66, 65, 65, 64, 64, 63, 63, 62, 62, 61, 61, 61, 60, 60, 58, 58, 58, 57, 57, 57, 56, 56, 56, 56, 55, 55, 54, 54, 54, 54, 54, 54, 54, 54, 54, 53, 53, 54, 54, 54, 54, 55, 55, 55, 56, 56, 56, 56, 56, 57, 57, 57, 58, 58, 59, 59, 60, 60, 61, 61, 62, 63, 63, 64, 64, 65, 65, 66, 66, 67, 67, 67, 68, 68, 70, 70, 70, 71, 71, 71, 72, 72, 72, 72, 73, 73, 74, 74, 74, 74};
PROGMEM uint8_t y_point_2[]={74, 74, 74, 74, 74, 73, 73, 72, 72, 72, 72, 71, 71, 71, 70, 70, 70, 68, 68, 67, 67, 67, 66, 66, 65, 65, 64, 64, 63, 63, 62, 61, 61, 60, 60, 59, 59, 58, 58, 57, 57, 57, 56, 56, 56, 56, 56, 55, 55, 55, 54, 54, 54, 54, 53, 53, 54, 54, 54, 54, 54, 54, 54, 54, 54, 55, 55, 56, 56, 56, 56, 57, 57, 57, 58, 58, 58, 60, 60, 61, 61, 61, 62, 62, 63, 63, 64, 64, 65, 65, 66, 67, 67, 68, 68, 69, 69, 70, 70, 71, 71, 71, 72, 72, 72, 72, 72, 73, 73, 73, 74, 74, 74, 74, 75, 75, 74, 74, 74, 74};
PROGMEM uint8_t y_point_3[]={6, 6, 6, 7, 7, 7, 8, 9, 10, 11, 13, 14, 16, 18, 20, 22, 24, 25, 28, 30, 33, 36, 38, 41, 44, 47, 50, 53, 56, 59, 62, 65, 68, 71, 74, 77, 80, 83, 86, 88, 91, 94, 96, 99, 102, 104, 106, 108, 110, 112, 113, 115, 116, 117, 118, 119, 121, 121, 122, 122, 122, 122, 122, 121, 121, 121, 120, 119, 118, 117, 115, 114, 112, 110, 108, 106, 104, 103, 100, 98, 95, 92, 90, 87, 84, 81, 78, 75, 72, 69, 66, 63, 60, 57, 54, 51, 48, 45, 42, 40, 37, 34, 32, 29, 26, 24, 22, 20, 18, 16, 15, 13, 12, 11, 10, 9, 7, 7, 6, 6};
PROGMEM uint8_t y_point_4[]={6, 6, 6, 7, 7, 9, 10, 11, 12, 13, 15, 16, 18, 20, 22, 24, 26, 29, 32, 34, 37, 40, 42, 45, 48, 51, 54, 57, 60, 63, 66, 69, 72, 75, 78, 81, 84, 87, 90, 92, 95, 98, 100, 103, 104, 106, 108, 110, 112, 114, 115, 117, 118, 119, 120, 121, 121, 121, 122, 122, 122, 122, 122, 121, 121, 119, 118, 117, 116, 115, 113, 112, 110, 108, 106, 104, 102, 99, 96, 94, 91, 88, 86, 83, 80, 77, 74, 71, 68, 65, 62, 59, 56, 53, 50, 47, 44, 41, 38, 36, 33, 30, 28, 25, 24, 22, 20, 18, 16, 14, 13, 11, 10, 9, 8, 7, 7, 7, 6, 6};

void displayAnalog(DateTime now, Adafruit_SharpMem display) {
  unsigned long epoch = now.unixtime();

  display.fillRect(0, 0, 128, 128, 1);
  drawMarkers(display);
  display.fillCircle(64, 64, 60, WHITE);
  drawDate(now, display);
  drawMinuteHand(currentMinutePosition(epoch), display);
  drawHourHand(currentHourPosition(epoch), display);

  display.refresh();
}

void drawDate(DateTime now, Adafruit_SharpMem display) {
  display.setCursor(86, 61);
  display.setTextSize(1);
  String day_of_week = day(now.unixtime());
  display.print(day(now.unixtime())+" "+now.day());
}

void drawMinuteHand(uint8_t m, Adafruit_SharpMem display){
  display.fillTriangle(x_point_1[m], y_point_1[m], x_point_2[m], y_point_2[m], x_point_3[m], y_point_3[m], BLACK);
  display.fillTriangle(x_point_3[m], y_point_3[m], x_point_4[m], y_point_4[m], x_point_1[m], y_point_1[m], BLACK);
}

void drawHourHand(uint8_t h, Adafruit_SharpMem display){
  uint8_t x_points[]= {hour_x_point_1[h], hour_x_point_2[h], hour_x_point_3[h], hour_x_point_4[h]};
  uint8_t y_points[]= {hour_y_point_1[h], hour_y_point_2[h], hour_y_point_3[h], hour_y_point_4[h]};
  drawRectangle(display, x_points, y_points);
}

void drawRectangle(Adafruit_SharpMem display, uint8_t x_points[], uint8_t y_points[]){
  display.fillTriangle(x_points[0], y_points[0], x_points[1], y_points[1], x_points[2], y_points[2], BLACK);
  display.fillTriangle(x_points[2], y_points[2], x_points[3], y_points[3], x_points[0], y_points[0], BLACK);
}

void drawMarkers(Adafruit_SharpMem display){
   for (int i=0; i <= 11; i++){
      uint8_t x_points[]= {markers_x_point_1[i], markers_x_point_2[i], markers_x_point_3[i], markers_x_point_4[i]};
      uint8_t y_points[]= {markers_y_point_1[i], markers_y_point_2[i], markers_y_point_3[i], markers_y_point_4[i]};
      drawRectangle(display, x_points, y_points);
   }
}
// this may look bad, but it's way more understandable than any of the methods on
// http://en.wikipedia.org/wiki/Determination_of_the_day_of_the_week
// the following function depends on the fact that the unix epoch began on a thursday.
String day(unsigned long epoch){
  int num = (epoch / 86400) % 7;
  switch (num) {
    case 0:
      return "thr";
      break;
    case 1:
      return "fri";
      break;
    case 2:
      return "sat";
      break;
    case 3:
      return "sun";
      break;
    case 4:
      return "mon";
      break;
    case 5:
      return "tue";
      break;
    case 6:
      return "wed";
      break;
  }

}


int currentHourPosition(long epoch) {
  return epoch / 720 % 60;
}

int currentMinutePosition(long epoch){
  return (epoch / 30) % 120;
}
